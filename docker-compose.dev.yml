services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: kayak-app
        container_name: kayak-app
        restart: unless-stopped
        working_dir: /var/www/html
        environment:
            APP_ENV: local
            APP_DEBUG: 'true'
            APP_KEY: ${APP_KEY}
            DB_HOST: db
            DB_PORT: 3306
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            REDIS_HOST: redis
            REDIS_PASSWORD: null
            REDIS_PORT: 6379
        volumes:
            - .:/var/www/html
        depends_on:
            - db
            - redis
        networks:
            - laravel

    # Serwis bazy danych
    db:
        image: mariadb:latest
        container_name: mariadb
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/mysql
            - ./docker/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - laravel

    # Serwis Redis
    redis:
        image: redis:latest
        container_name: redis
        restart: unless-stopped
        networks:
            - laravel

    # Serwis Nginx
    nginx:
        image: nginx:latest
        container_name: nginx
        restart: unless-stopped
        ports:
            - '443:443'
        volumes:
            - .:/var/www/html
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./docker/ssl/cert.crt:/etc/nginx/ssl/cert.crt
            - ./docker/ssl/cert.key:/etc/nginx/ssl/cert.key
        depends_on:
            - app
        networks:
            - laravel


volumes:
    db_data:

networks:
    laravel:
        driver: bridge
