version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: kayak-app-prod
    container_name: kayak-app-prod
    restart: unless-stopped
    environment:
      APP_ENV: production
      APP_DEBUG: 'false'
      APP_KEY: ${APP_KEY}
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      QUEUE_CONNECTION: redis
    volumes:
      - ./storage:/var/www/html/storage
    networks:
      - traefik-public
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kayak-prod.rule=Host(`wartkinurt.pl`)"
      - "traefik.http.routers.kayak-prod.tls=true"
      - "traefik.http.routers.kayak-prod.tls.certresolver=myresolver"
      - "traefik.http.services.kayak-prod.loadbalancer.server.port=9000"

  queue-worker:
    image: kayak-app-prod
    container_name: kayak-queue-prod
    restart: unless-stopped
    command: php artisan queue:work redis --tries=3 --timeout=90
    environment:
      APP_ENV: production
      QUEUE_CONNECTION: redis
    volumes:
      - ./storage:/var/www/html/storage
    networks:
      - internal

  scheduler:
    image: kayak-app-prod
    container_name: kayak-scheduler-prod
    restart: unless-stopped
    command: php artisan schedule:work
    environment:
      APP_ENV: production
    volumes:
      - ./storage:/var/www/html/storage
    networks:
      - internal

  db:
    image: mariadb:latest
    container_name: mariadb-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./backups:/backups
    networks:
      - internal

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=300M
    networks:
      - internal
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pma.rule=Host(`db.wartkinurt.pl`)"
      - "traefik.http.routers.pma.tls=true"
      - "traefik.http.routers.pma.tls.certresolver=myresolver"
      - "traefik.http.services.pma.loadbalancer.server.port=80"

  redis:
    image: redis:alpine
    container_name: redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - internal

  backup:
    image: tiredofit/db-backup
    container_name: db-backup
    restart: unless-stopped
    environment:
      - DB_TYPE=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_DATABASE}
      - DB_USER=${DB_USERNAME}
      - DB_PASS=${DB_PASSWORD}
      - DB_DUMP_FREQ=10080  # 7 dni (7 * 24 * 60 minut)
      - DB_DUMP_BEGIN=0000
      - DB_CLEANUP_TIME=43200  # 30 dni
      - COMPRESSION=gz
      - SPLIT_DB=FALSE
      - CHECKSUM=SHA1
    volumes:
      - ./backups:/backup
    networks:
      - internal

volumes:
  db_data:
  redis_data:

networks:
  traefik-public:
    external: true
  internal:
    driver: bridge
