name: Build and Push Docker Image

# Workflow uruchamiany ręcznie
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch do zbudowania (np. main, develop)'
        required: true
        default: 'main'
      image_tag:
        description: 'Tag obrazu Docker (np. latest, v1.0.0)'
        required: true
        default: 'latest'
      additional_tags:
        description: 'Dodatkowe tagi oddzielone przecinkami (opcjonalnie)'
        required: false

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Private Registry
        uses: docker/login-action@v3
        with:
          registry: registry.wartkinurt.pl
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Prepare tags
        id: prep
        run: |
          MAIN_TAG="${{ github.repository_owner }}/wartkinurt:${{ github.event.inputs.image_tag }}"
          TAGS="registry.wartkinurt.pl/${MAIN_TAG}"

          # Dodaj dodatkowe tagi, jeśli są
          if [[ -n "${{ github.event.inputs.additional_tags }}" ]]; then
            IFS=',' read -ra ADDITIONAL_TAGS <<< "${{ github.event.inputs.additional_tags }}"
            for tag in "${ADDITIONAL_TAGS[@]}"; do
              TAGS="${TAGS},registry.wartkinurt.pl/${{ github.repository_owner }}/wartkinurt:${tag}"
            done
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "Przygotowane tagi: ${TAGS}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}
            VERSION=${{ github.event.inputs.image_tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
