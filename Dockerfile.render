# Używamy oficjalnego obrazu PHP 8.2 z FPM
FROM richarvey/nginx-php-fpm:3.1.6

# Instalacja zależności systemowych
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    nginx \
    nodejs \
    npm

# Instalacja rozszerzeń PHP
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Instalacja Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Ustawienie katalogu roboczego
WORKDIR /var/www/html

# Kopiowanie plików projektu
COPY . /var/www/html

# Allow composer to run as root
ENV COMPOSER_ALLOW_SUPERUSER 1

# Instalacja zależności PHP
RUN composer install --optimize-autoloader --no-dev

# Instalacja zależności Node.js
RUN npm ci

# Budowanie aplikacji z użyciem vite.config.render.js
RUN npm run build -- --config vite.config.render.js

# Przeniesienie pliku manifestu (jeśli potrzebne)
RUN node move-manifest.js

# Kopiowanie konfiguracji Nginx
COPY docker/nginx.render.conf /etc/nginx/sites-available/default

# Upewnienie się, że katalogi storage i bootstrap/cache są zapisywalne
RUN chown -R www-data:www-data \
    /var/www/html/storage \
    /var/www/html/bootstrap/cache

# Czyszczenie
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Utworzenie skryptu startowego
RUN echo '#!/bin/bash\n\
    service nginx start\n\
    php-fpm' > /usr/local/bin/start.sh \
    && chmod +x /usr/local/bin/start.sh

# Uruchomienie Nginx i PHP-FPM
CMD ["/usr/local/bin/start.sh"]
